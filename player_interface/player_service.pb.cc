// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player_service.proto

#include "player_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace player_service {
class PlayerPropertiesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerPropertiesRequest>
      _instance;
} _PlayerPropertiesRequest_default_instance_;
class PlayerPropertiesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerPropertiesResponse>
      _instance;
} _PlayerPropertiesResponse_default_instance_;
class ResetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetRequest>
      _instance;
} _ResetRequest_default_instance_;
class ResetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetResponse>
      _instance;
} _ResetResponse_default_instance_;
class PushToPlaylistRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushToPlaylistRequest>
      _instance;
} _PushToPlaylistRequest_default_instance_;
class PushToPlaylistResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushToPlaylistResponse>
      _instance;
} _PushToPlaylistResponse_default_instance_;
class PlaybackControlRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaybackControlRequest>
      _instance;
} _PlaybackControlRequest_default_instance_;
class PlaybackControlResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaybackControlResponse>
      _instance;
} _PlaybackControlResponse_default_instance_;
}  // namespace player_service
namespace protobuf_player_5fservice_2eproto {
static void InitDefaultsPlayerPropertiesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::player_service::_PlayerPropertiesRequest_default_instance_;
    new (ptr) ::player_service::PlayerPropertiesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::player_service::PlayerPropertiesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerPropertiesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerPropertiesRequest}, {}};

static void InitDefaultsPlayerPropertiesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::player_service::_PlayerPropertiesResponse_default_instance_;
    new (ptr) ::player_service::PlayerPropertiesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::player_service::PlayerPropertiesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerPropertiesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerPropertiesResponse}, {}};

static void InitDefaultsResetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::player_service::_ResetRequest_default_instance_;
    new (ptr) ::player_service::ResetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::player_service::ResetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResetRequest}, {}};

static void InitDefaultsResetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::player_service::_ResetResponse_default_instance_;
    new (ptr) ::player_service::ResetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::player_service::ResetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResetResponse}, {}};

static void InitDefaultsPushToPlaylistRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::player_service::_PushToPlaylistRequest_default_instance_;
    new (ptr) ::player_service::PushToPlaylistRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::player_service::PushToPlaylistRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PushToPlaylistRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPushToPlaylistRequest}, {}};

static void InitDefaultsPushToPlaylistResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::player_service::_PushToPlaylistResponse_default_instance_;
    new (ptr) ::player_service::PushToPlaylistResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::player_service::PushToPlaylistResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PushToPlaylistResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPushToPlaylistResponse}, {}};

static void InitDefaultsPlaybackControlRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::player_service::_PlaybackControlRequest_default_instance_;
    new (ptr) ::player_service::PlaybackControlRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::player_service::PlaybackControlRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlaybackControlRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlaybackControlRequest}, {}};

static void InitDefaultsPlaybackControlResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::player_service::_PlaybackControlResponse_default_instance_;
    new (ptr) ::player_service::PlaybackControlResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::player_service::PlaybackControlResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlaybackControlResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlaybackControlResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerPropertiesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerPropertiesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushToPlaylistRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushToPlaylistResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlaybackControlRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlaybackControlResponse.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlayerPropertiesRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlayerPropertiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlayerPropertiesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlayerPropertiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlayerPropertiesResponse, supported_file_types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlayerPropertiesResponse, player_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlayerPropertiesResponse, player_description_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::ResetRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::ResetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::ResetResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::ResetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::ResetResponse, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::ResetResponse, error_code_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PushToPlaylistRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PushToPlaylistRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PushToPlaylistRequest, file_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PushToPlaylistRequest, original_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PushToPlaylistRequest, push_to_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PushToPlaylistRequest, file_data_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PushToPlaylistResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PushToPlaylistResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PushToPlaylistResponse, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PushToPlaylistResponse, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PushToPlaylistResponse, playlist_index_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlaybackControlRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlaybackControlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlaybackControlRequest, control_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlaybackControlRequest, play_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlaybackControlRequest, volume_percent_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlaybackControlResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlaybackControlResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlaybackControlResponse, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::player_service::PlaybackControlResponse, error_code_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::player_service::PlayerPropertiesRequest)},
  { 5, 13, sizeof(::player_service::PlayerPropertiesResponse)},
  { 16, 21, sizeof(::player_service::ResetRequest)},
  { 21, 28, sizeof(::player_service::ResetResponse)},
  { 30, 39, sizeof(::player_service::PushToPlaylistRequest)},
  { 43, 51, sizeof(::player_service::PushToPlaylistResponse)},
  { 54, 62, sizeof(::player_service::PlaybackControlRequest)},
  { 65, 72, sizeof(::player_service::PlaybackControlResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::player_service::_PlayerPropertiesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::player_service::_PlayerPropertiesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::player_service::_ResetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::player_service::_ResetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::player_service::_PushToPlaylistRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::player_service::_PushToPlaylistResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::player_service::_PlaybackControlRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::player_service::_PlaybackControlResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "player_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024player_service.proto\022\016player_service\"\031"
      "\n\027PlayerPropertiesRequest\"i\n\030PlayerPrope"
      "rtiesResponse\022\034\n\024supported_file_types\030\001 "
      "\003(\t\022\023\n\013player_name\030\002 \002(\t\022\032\n\022player_descr"
      "iption\030\003 \002(\t\"\016\n\014ResetRequest\":\n\rResetRes"
      "ponse\022\025\n\rerror_message\030\001 \002(\t\022\022\n\nerror_co"
      "de\030\002 \002(\005\"k\n\025PushToPlaylistRequest\022\021\n\tfil"
      "e_type\030\001 \002(\t\022\025\n\roriginal_path\030\002 \002(\t\022\025\n\rp"
      "ush_to_index\030\003 \002(\005\022\021\n\tfile_data\030\004 \002(\014\"[\n"
      "\026PushToPlaylistResponse\022\025\n\rerror_message"
      "\030\001 \002(\t\022\022\n\nerror_code\030\002 \002(\005\022\026\n\016playlist_i"
      "ndex\030\003 \001(\005\"\310\001\n\026PlaybackControlRequest\022H\n"
      "\014control_type\030\001 \002(\01622.player_service.Pla"
      "ybackControlRequest.ControlType\022\022\n\nplay_"
      "index\030\002 \001(\005\022\026\n\016volume_percent\030\003 \001(\005\"8\n\013C"
      "ontrolType\022\010\n\004PLAY\020\000\022\010\n\004STOP\020\001\022\t\n\005PAUSE\020"
      "\002\022\n\n\006VOLUME\020\003\"D\n\027PlaybackControlResponse"
      "\022\025\n\rerror_message\030\001 \002(\t\022\022\n\nerror_code\030\002 "
      "\002(\0052\211\003\n\rPlayerService\022e\n\020PlayerPropertie"
      "s\022\'.player_service.PlayerPropertiesReque"
      "st\032(.player_service.PlayerPropertiesResp"
      "onse\022L\n\rResetPlaylist\022\034.player_service.R"
      "esetRequest\032\035.player_service.ResetRespon"
      "se\022_\n\016PushToPlaylist\022%.player_service.Pu"
      "shToPlaylistRequest\032&.player_service.Pus"
      "hToPlaylistResponse\022b\n\017PlaybackControl\022&"
      ".player_service.PlaybackControlRequest\032\'"
      ".player_service.PlaybackControlResponseB"
      "\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1124);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "player_service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_player_5fservice_2eproto
namespace player_service {
const ::google::protobuf::EnumDescriptor* PlaybackControlRequest_ControlType_descriptor() {
  protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fservice_2eproto::file_level_enum_descriptors[0];
}
bool PlaybackControlRequest_ControlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlaybackControlRequest_ControlType PlaybackControlRequest::PLAY;
const PlaybackControlRequest_ControlType PlaybackControlRequest::STOP;
const PlaybackControlRequest_ControlType PlaybackControlRequest::PAUSE;
const PlaybackControlRequest_ControlType PlaybackControlRequest::VOLUME;
const PlaybackControlRequest_ControlType PlaybackControlRequest::ControlType_MIN;
const PlaybackControlRequest_ControlType PlaybackControlRequest::ControlType_MAX;
const int PlaybackControlRequest::ControlType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PlayerPropertiesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPropertiesRequest::PlayerPropertiesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_5fservice_2eproto::scc_info_PlayerPropertiesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:player_service.PlayerPropertiesRequest)
}
PlayerPropertiesRequest::PlayerPropertiesRequest(const PlayerPropertiesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player_service.PlayerPropertiesRequest)
}

void PlayerPropertiesRequest::SharedCtor() {
}

PlayerPropertiesRequest::~PlayerPropertiesRequest() {
  // @@protoc_insertion_point(destructor:player_service.PlayerPropertiesRequest)
  SharedDtor();
}

void PlayerPropertiesRequest::SharedDtor() {
}

void PlayerPropertiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerPropertiesRequest::descriptor() {
  ::protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerPropertiesRequest& PlayerPropertiesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_5fservice_2eproto::scc_info_PlayerPropertiesRequest.base);
  return *internal_default_instance();
}


void PlayerPropertiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:player_service.PlayerPropertiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerPropertiesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:player_service.PlayerPropertiesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:player_service.PlayerPropertiesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:player_service.PlayerPropertiesRequest)
  return false;
#undef DO_
}

void PlayerPropertiesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:player_service.PlayerPropertiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:player_service.PlayerPropertiesRequest)
}

::google::protobuf::uint8* PlayerPropertiesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:player_service.PlayerPropertiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player_service.PlayerPropertiesRequest)
  return target;
}

size_t PlayerPropertiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_service.PlayerPropertiesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerPropertiesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:player_service.PlayerPropertiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerPropertiesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPropertiesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:player_service.PlayerPropertiesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:player_service.PlayerPropertiesRequest)
    MergeFrom(*source);
  }
}

void PlayerPropertiesRequest::MergeFrom(const PlayerPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:player_service.PlayerPropertiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PlayerPropertiesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:player_service.PlayerPropertiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPropertiesRequest::CopyFrom(const PlayerPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_service.PlayerPropertiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPropertiesRequest::IsInitialized() const {
  return true;
}

void PlayerPropertiesRequest::Swap(PlayerPropertiesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerPropertiesRequest::InternalSwap(PlayerPropertiesRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerPropertiesRequest::GetMetadata() const {
  protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerPropertiesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPropertiesResponse::kSupportedFileTypesFieldNumber;
const int PlayerPropertiesResponse::kPlayerNameFieldNumber;
const int PlayerPropertiesResponse::kPlayerDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPropertiesResponse::PlayerPropertiesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_5fservice_2eproto::scc_info_PlayerPropertiesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:player_service.PlayerPropertiesResponse)
}
PlayerPropertiesResponse::PlayerPropertiesResponse(const PlayerPropertiesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      supported_file_types_(from.supported_file_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_player_name()) {
    player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  player_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_player_description()) {
    player_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_description_);
  }
  // @@protoc_insertion_point(copy_constructor:player_service.PlayerPropertiesResponse)
}

void PlayerPropertiesResponse::SharedCtor() {
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlayerPropertiesResponse::~PlayerPropertiesResponse() {
  // @@protoc_insertion_point(destructor:player_service.PlayerPropertiesResponse)
  SharedDtor();
}

void PlayerPropertiesResponse::SharedDtor() {
  player_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerPropertiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerPropertiesResponse::descriptor() {
  ::protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerPropertiesResponse& PlayerPropertiesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_5fservice_2eproto::scc_info_PlayerPropertiesResponse.base);
  return *internal_default_instance();
}


void PlayerPropertiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:player_service.PlayerPropertiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supported_file_types_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      player_description_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerPropertiesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:player_service.PlayerPropertiesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string supported_file_types = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_supported_file_types()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->supported_file_types(this->supported_file_types_size() - 1).data(),
            static_cast<int>(this->supported_file_types(this->supported_file_types_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "player_service.PlayerPropertiesResponse.supported_file_types");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string player_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->player_name().data(), static_cast<int>(this->player_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "player_service.PlayerPropertiesResponse.player_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string player_description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->player_description().data(), static_cast<int>(this->player_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "player_service.PlayerPropertiesResponse.player_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:player_service.PlayerPropertiesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:player_service.PlayerPropertiesResponse)
  return false;
#undef DO_
}

void PlayerPropertiesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:player_service.PlayerPropertiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string supported_file_types = 1;
  for (int i = 0, n = this->supported_file_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->supported_file_types(i).data(), static_cast<int>(this->supported_file_types(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PlayerPropertiesResponse.supported_file_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->supported_file_types(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required string player_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PlayerPropertiesResponse.player_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->player_name(), output);
  }

  // required string player_description = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_description().data(), static_cast<int>(this->player_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PlayerPropertiesResponse.player_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->player_description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:player_service.PlayerPropertiesResponse)
}

::google::protobuf::uint8* PlayerPropertiesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:player_service.PlayerPropertiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string supported_file_types = 1;
  for (int i = 0, n = this->supported_file_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->supported_file_types(i).data(), static_cast<int>(this->supported_file_types(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PlayerPropertiesResponse.supported_file_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->supported_file_types(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // required string player_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PlayerPropertiesResponse.player_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->player_name(), target);
  }

  // required string player_description = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_description().data(), static_cast<int>(this->player_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PlayerPropertiesResponse.player_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->player_description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player_service.PlayerPropertiesResponse)
  return target;
}

size_t PlayerPropertiesResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:player_service.PlayerPropertiesResponse)
  size_t total_size = 0;

  if (has_player_name()) {
    // required string player_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->player_name());
  }

  if (has_player_description()) {
    // required string player_description = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->player_description());
  }

  return total_size;
}
size_t PlayerPropertiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_service.PlayerPropertiesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string player_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->player_name());

    // required string player_description = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->player_description());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string supported_file_types = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->supported_file_types_size());
  for (int i = 0, n = this->supported_file_types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->supported_file_types(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerPropertiesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:player_service.PlayerPropertiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerPropertiesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPropertiesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:player_service.PlayerPropertiesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:player_service.PlayerPropertiesResponse)
    MergeFrom(*source);
  }
}

void PlayerPropertiesResponse::MergeFrom(const PlayerPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:player_service.PlayerPropertiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  supported_file_types_.MergeFrom(from.supported_file_types_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_player_name();
      player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_player_description();
      player_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_description_);
    }
  }
}

void PlayerPropertiesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:player_service.PlayerPropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPropertiesResponse::CopyFrom(const PlayerPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_service.PlayerPropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPropertiesResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PlayerPropertiesResponse::Swap(PlayerPropertiesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerPropertiesResponse::InternalSwap(PlayerPropertiesResponse* other) {
  using std::swap;
  supported_file_types_.InternalSwap(CastToBase(&other->supported_file_types_));
  player_name_.Swap(&other->player_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  player_description_.Swap(&other->player_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerPropertiesResponse::GetMetadata() const {
  protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetRequest::ResetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_5fservice_2eproto::scc_info_ResetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:player_service.ResetRequest)
}
ResetRequest::ResetRequest(const ResetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:player_service.ResetRequest)
}

void ResetRequest::SharedCtor() {
}

ResetRequest::~ResetRequest() {
  // @@protoc_insertion_point(destructor:player_service.ResetRequest)
  SharedDtor();
}

void ResetRequest::SharedDtor() {
}

void ResetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResetRequest::descriptor() {
  ::protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetRequest& ResetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_5fservice_2eproto::scc_info_ResetRequest.base);
  return *internal_default_instance();
}


void ResetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:player_service.ResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:player_service.ResetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:player_service.ResetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:player_service.ResetRequest)
  return false;
#undef DO_
}

void ResetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:player_service.ResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:player_service.ResetRequest)
}

::google::protobuf::uint8* ResetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:player_service.ResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player_service.ResetRequest)
  return target;
}

size_t ResetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_service.ResetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:player_service.ResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:player_service.ResetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:player_service.ResetRequest)
    MergeFrom(*source);
  }
}

void ResetRequest::MergeFrom(const ResetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:player_service.ResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ResetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:player_service.ResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetRequest::CopyFrom(const ResetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_service.ResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetRequest::IsInitialized() const {
  return true;
}

void ResetRequest::Swap(ResetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetRequest::InternalSwap(ResetRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResetRequest::GetMetadata() const {
  protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetResponse::kErrorMessageFieldNumber;
const int ResetResponse::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetResponse::ResetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_5fservice_2eproto::scc_info_ResetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:player_service.ResetResponse)
}
ResetResponse::ResetResponse(const ResetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_message()) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:player_service.ResetResponse)
}

void ResetResponse::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

ResetResponse::~ResetResponse() {
  // @@protoc_insertion_point(destructor:player_service.ResetResponse)
  SharedDtor();
}

void ResetResponse::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResetResponse::descriptor() {
  ::protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetResponse& ResetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_5fservice_2eproto::scc_info_ResetResponse.base);
  return *internal_default_instance();
}


void ResetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:player_service.ResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_message_.ClearNonDefaultToEmptyNoArena();
  }
  error_code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:player_service.ResetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string error_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "player_service.ResetResponse.error_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 error_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:player_service.ResetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:player_service.ResetResponse)
  return false;
#undef DO_
}

void ResetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:player_service.ResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string error_message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.ResetResponse.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error_message(), output);
  }

  // required int32 error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:player_service.ResetResponse)
}

::google::protobuf::uint8* ResetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:player_service.ResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string error_message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.ResetResponse.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error_message(), target);
  }

  // required int32 error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player_service.ResetResponse)
  return target;
}

size_t ResetResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:player_service.ResetResponse)
  size_t total_size = 0;

  if (has_error_message()) {
    // required string error_message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  if (has_error_code()) {
    // required int32 error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  return total_size;
}
size_t ResetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_service.ResetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string error_message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());

    // required int32 error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:player_service.ResetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:player_service.ResetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:player_service.ResetResponse)
    MergeFrom(*source);
  }
}

void ResetResponse::MergeFrom(const ResetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:player_service.ResetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error_message();
      error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      error_code_ = from.error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:player_service.ResetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetResponse::CopyFrom(const ResetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_service.ResetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ResetResponse::Swap(ResetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetResponse::InternalSwap(ResetResponse* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_code_, other->error_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResetResponse::GetMetadata() const {
  protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushToPlaylistRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushToPlaylistRequest::kFileTypeFieldNumber;
const int PushToPlaylistRequest::kOriginalPathFieldNumber;
const int PushToPlaylistRequest::kPushToIndexFieldNumber;
const int PushToPlaylistRequest::kFileDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushToPlaylistRequest::PushToPlaylistRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_5fservice_2eproto::scc_info_PushToPlaylistRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:player_service.PushToPlaylistRequest)
}
PushToPlaylistRequest::PushToPlaylistRequest(const PushToPlaylistRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_type()) {
    file_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_type_);
  }
  original_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_original_path()) {
    original_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_path_);
  }
  file_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_data()) {
    file_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_data_);
  }
  push_to_index_ = from.push_to_index_;
  // @@protoc_insertion_point(copy_constructor:player_service.PushToPlaylistRequest)
}

void PushToPlaylistRequest::SharedCtor() {
  file_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  push_to_index_ = 0;
}

PushToPlaylistRequest::~PushToPlaylistRequest() {
  // @@protoc_insertion_point(destructor:player_service.PushToPlaylistRequest)
  SharedDtor();
}

void PushToPlaylistRequest::SharedDtor() {
  file_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PushToPlaylistRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PushToPlaylistRequest::descriptor() {
  ::protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushToPlaylistRequest& PushToPlaylistRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_5fservice_2eproto::scc_info_PushToPlaylistRequest.base);
  return *internal_default_instance();
}


void PushToPlaylistRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:player_service.PushToPlaylistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      file_type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      original_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      file_data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  push_to_index_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PushToPlaylistRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:player_service.PushToPlaylistRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string file_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_type().data(), static_cast<int>(this->file_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "player_service.PushToPlaylistRequest.file_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string original_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->original_path().data(), static_cast<int>(this->original_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "player_service.PushToPlaylistRequest.original_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 push_to_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_push_to_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &push_to_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes file_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_file_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:player_service.PushToPlaylistRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:player_service.PushToPlaylistRequest)
  return false;
#undef DO_
}

void PushToPlaylistRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:player_service.PushToPlaylistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string file_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_type().data(), static_cast<int>(this->file_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PushToPlaylistRequest.file_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_type(), output);
  }

  // required string original_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->original_path().data(), static_cast<int>(this->original_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PushToPlaylistRequest.original_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->original_path(), output);
  }

  // required int32 push_to_index = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->push_to_index(), output);
  }

  // required bytes file_data = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->file_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:player_service.PushToPlaylistRequest)
}

::google::protobuf::uint8* PushToPlaylistRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:player_service.PushToPlaylistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string file_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_type().data(), static_cast<int>(this->file_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PushToPlaylistRequest.file_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_type(), target);
  }

  // required string original_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->original_path().data(), static_cast<int>(this->original_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PushToPlaylistRequest.original_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->original_path(), target);
  }

  // required int32 push_to_index = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->push_to_index(), target);
  }

  // required bytes file_data = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->file_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player_service.PushToPlaylistRequest)
  return target;
}

size_t PushToPlaylistRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:player_service.PushToPlaylistRequest)
  size_t total_size = 0;

  if (has_file_type()) {
    // required string file_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_type());
  }

  if (has_original_path()) {
    // required string original_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_path());
  }

  if (has_file_data()) {
    // required bytes file_data = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->file_data());
  }

  if (has_push_to_index()) {
    // required int32 push_to_index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->push_to_index());
  }

  return total_size;
}
size_t PushToPlaylistRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_service.PushToPlaylistRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string file_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_type());

    // required string original_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_path());

    // required bytes file_data = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->file_data());

    // required int32 push_to_index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->push_to_index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushToPlaylistRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:player_service.PushToPlaylistRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PushToPlaylistRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushToPlaylistRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:player_service.PushToPlaylistRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:player_service.PushToPlaylistRequest)
    MergeFrom(*source);
  }
}

void PushToPlaylistRequest::MergeFrom(const PushToPlaylistRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:player_service.PushToPlaylistRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_type();
      file_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_original_path();
      original_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_file_data();
      file_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_data_);
    }
    if (cached_has_bits & 0x00000008u) {
      push_to_index_ = from.push_to_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PushToPlaylistRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:player_service.PushToPlaylistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushToPlaylistRequest::CopyFrom(const PushToPlaylistRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_service.PushToPlaylistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushToPlaylistRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void PushToPlaylistRequest::Swap(PushToPlaylistRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushToPlaylistRequest::InternalSwap(PushToPlaylistRequest* other) {
  using std::swap;
  file_type_.Swap(&other->file_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  original_path_.Swap(&other->original_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_data_.Swap(&other->file_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(push_to_index_, other->push_to_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PushToPlaylistRequest::GetMetadata() const {
  protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushToPlaylistResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushToPlaylistResponse::kErrorMessageFieldNumber;
const int PushToPlaylistResponse::kErrorCodeFieldNumber;
const int PushToPlaylistResponse::kPlaylistIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushToPlaylistResponse::PushToPlaylistResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_5fservice_2eproto::scc_info_PushToPlaylistResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:player_service.PushToPlaylistResponse)
}
PushToPlaylistResponse::PushToPlaylistResponse(const PushToPlaylistResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_message()) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  ::memcpy(&error_code_, &from.error_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&playlist_index_) -
    reinterpret_cast<char*>(&error_code_)) + sizeof(playlist_index_));
  // @@protoc_insertion_point(copy_constructor:player_service.PushToPlaylistResponse)
}

void PushToPlaylistResponse::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playlist_index_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(playlist_index_));
}

PushToPlaylistResponse::~PushToPlaylistResponse() {
  // @@protoc_insertion_point(destructor:player_service.PushToPlaylistResponse)
  SharedDtor();
}

void PushToPlaylistResponse::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PushToPlaylistResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PushToPlaylistResponse::descriptor() {
  ::protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushToPlaylistResponse& PushToPlaylistResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_5fservice_2eproto::scc_info_PushToPlaylistResponse.base);
  return *internal_default_instance();
}


void PushToPlaylistResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:player_service.PushToPlaylistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&error_code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&playlist_index_) -
        reinterpret_cast<char*>(&error_code_)) + sizeof(playlist_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PushToPlaylistResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:player_service.PushToPlaylistResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string error_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "player_service.PushToPlaylistResponse.error_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 error_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 playlist_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_playlist_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playlist_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:player_service.PushToPlaylistResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:player_service.PushToPlaylistResponse)
  return false;
#undef DO_
}

void PushToPlaylistResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:player_service.PushToPlaylistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string error_message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PushToPlaylistResponse.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error_message(), output);
  }

  // required int32 error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error_code(), output);
  }

  // optional int32 playlist_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->playlist_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:player_service.PushToPlaylistResponse)
}

::google::protobuf::uint8* PushToPlaylistResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:player_service.PushToPlaylistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string error_message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PushToPlaylistResponse.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error_message(), target);
  }

  // required int32 error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error_code(), target);
  }

  // optional int32 playlist_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->playlist_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player_service.PushToPlaylistResponse)
  return target;
}

size_t PushToPlaylistResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:player_service.PushToPlaylistResponse)
  size_t total_size = 0;

  if (has_error_message()) {
    // required string error_message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  if (has_error_code()) {
    // required int32 error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  return total_size;
}
size_t PushToPlaylistResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_service.PushToPlaylistResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string error_message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());

    // required int32 error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 playlist_index = 3;
  if (has_playlist_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playlist_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushToPlaylistResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:player_service.PushToPlaylistResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PushToPlaylistResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushToPlaylistResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:player_service.PushToPlaylistResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:player_service.PushToPlaylistResponse)
    MergeFrom(*source);
  }
}

void PushToPlaylistResponse::MergeFrom(const PushToPlaylistResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:player_service.PushToPlaylistResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error_message();
      error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      error_code_ = from.error_code_;
    }
    if (cached_has_bits & 0x00000004u) {
      playlist_index_ = from.playlist_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PushToPlaylistResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:player_service.PushToPlaylistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushToPlaylistResponse::CopyFrom(const PushToPlaylistResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_service.PushToPlaylistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushToPlaylistResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PushToPlaylistResponse::Swap(PushToPlaylistResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushToPlaylistResponse::InternalSwap(PushToPlaylistResponse* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_code_, other->error_code_);
  swap(playlist_index_, other->playlist_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PushToPlaylistResponse::GetMetadata() const {
  protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlaybackControlRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaybackControlRequest::kControlTypeFieldNumber;
const int PlaybackControlRequest::kPlayIndexFieldNumber;
const int PlaybackControlRequest::kVolumePercentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaybackControlRequest::PlaybackControlRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_5fservice_2eproto::scc_info_PlaybackControlRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:player_service.PlaybackControlRequest)
}
PlaybackControlRequest::PlaybackControlRequest(const PlaybackControlRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&control_type_, &from.control_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&volume_percent_) -
    reinterpret_cast<char*>(&control_type_)) + sizeof(volume_percent_));
  // @@protoc_insertion_point(copy_constructor:player_service.PlaybackControlRequest)
}

void PlaybackControlRequest::SharedCtor() {
  ::memset(&control_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_percent_) -
      reinterpret_cast<char*>(&control_type_)) + sizeof(volume_percent_));
}

PlaybackControlRequest::~PlaybackControlRequest() {
  // @@protoc_insertion_point(destructor:player_service.PlaybackControlRequest)
  SharedDtor();
}

void PlaybackControlRequest::SharedDtor() {
}

void PlaybackControlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlaybackControlRequest::descriptor() {
  ::protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaybackControlRequest& PlaybackControlRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_5fservice_2eproto::scc_info_PlaybackControlRequest.base);
  return *internal_default_instance();
}


void PlaybackControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:player_service.PlaybackControlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&control_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&volume_percent_) -
        reinterpret_cast<char*>(&control_type_)) + sizeof(volume_percent_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlaybackControlRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:player_service.PlaybackControlRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .player_service.PlaybackControlRequest.ControlType control_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::player_service::PlaybackControlRequest_ControlType_IsValid(value)) {
            set_control_type(static_cast< ::player_service::PlaybackControlRequest_ControlType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 play_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_play_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &play_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 volume_percent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_volume_percent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:player_service.PlaybackControlRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:player_service.PlaybackControlRequest)
  return false;
#undef DO_
}

void PlaybackControlRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:player_service.PlaybackControlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .player_service.PlaybackControlRequest.ControlType control_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->control_type(), output);
  }

  // optional int32 play_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->play_index(), output);
  }

  // optional int32 volume_percent = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->volume_percent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:player_service.PlaybackControlRequest)
}

::google::protobuf::uint8* PlaybackControlRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:player_service.PlaybackControlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .player_service.PlaybackControlRequest.ControlType control_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->control_type(), target);
  }

  // optional int32 play_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->play_index(), target);
  }

  // optional int32 volume_percent = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->volume_percent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player_service.PlaybackControlRequest)
  return target;
}

size_t PlaybackControlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_service.PlaybackControlRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .player_service.PlaybackControlRequest.ControlType control_type = 1;
  if (has_control_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->control_type());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional int32 play_index = 2;
    if (has_play_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->play_index());
    }

    // optional int32 volume_percent = 3;
    if (has_volume_percent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->volume_percent());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlaybackControlRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:player_service.PlaybackControlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaybackControlRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaybackControlRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:player_service.PlaybackControlRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:player_service.PlaybackControlRequest)
    MergeFrom(*source);
  }
}

void PlaybackControlRequest::MergeFrom(const PlaybackControlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:player_service.PlaybackControlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      control_type_ = from.control_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      play_index_ = from.play_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      volume_percent_ = from.volume_percent_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlaybackControlRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:player_service.PlaybackControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaybackControlRequest::CopyFrom(const PlaybackControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_service.PlaybackControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaybackControlRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PlaybackControlRequest::Swap(PlaybackControlRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaybackControlRequest::InternalSwap(PlaybackControlRequest* other) {
  using std::swap;
  swap(control_type_, other->control_type_);
  swap(play_index_, other->play_index_);
  swap(volume_percent_, other->volume_percent_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlaybackControlRequest::GetMetadata() const {
  protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlaybackControlResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaybackControlResponse::kErrorMessageFieldNumber;
const int PlaybackControlResponse::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaybackControlResponse::PlaybackControlResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_5fservice_2eproto::scc_info_PlaybackControlResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:player_service.PlaybackControlResponse)
}
PlaybackControlResponse::PlaybackControlResponse(const PlaybackControlResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_message()) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:player_service.PlaybackControlResponse)
}

void PlaybackControlResponse::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

PlaybackControlResponse::~PlaybackControlResponse() {
  // @@protoc_insertion_point(destructor:player_service.PlaybackControlResponse)
  SharedDtor();
}

void PlaybackControlResponse::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlaybackControlResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlaybackControlResponse::descriptor() {
  ::protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaybackControlResponse& PlaybackControlResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_5fservice_2eproto::scc_info_PlaybackControlResponse.base);
  return *internal_default_instance();
}


void PlaybackControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:player_service.PlaybackControlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_message_.ClearNonDefaultToEmptyNoArena();
  }
  error_code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlaybackControlResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:player_service.PlaybackControlResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string error_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "player_service.PlaybackControlResponse.error_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 error_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:player_service.PlaybackControlResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:player_service.PlaybackControlResponse)
  return false;
#undef DO_
}

void PlaybackControlResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:player_service.PlaybackControlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string error_message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PlaybackControlResponse.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error_message(), output);
  }

  // required int32 error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:player_service.PlaybackControlResponse)
}

::google::protobuf::uint8* PlaybackControlResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:player_service.PlaybackControlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string error_message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "player_service.PlaybackControlResponse.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error_message(), target);
  }

  // required int32 error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:player_service.PlaybackControlResponse)
  return target;
}

size_t PlaybackControlResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:player_service.PlaybackControlResponse)
  size_t total_size = 0;

  if (has_error_message()) {
    // required string error_message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  if (has_error_code()) {
    // required int32 error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  return total_size;
}
size_t PlaybackControlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_service.PlaybackControlResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string error_message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());

    // required int32 error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlaybackControlResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:player_service.PlaybackControlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaybackControlResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaybackControlResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:player_service.PlaybackControlResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:player_service.PlaybackControlResponse)
    MergeFrom(*source);
  }
}

void PlaybackControlResponse::MergeFrom(const PlaybackControlResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:player_service.PlaybackControlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error_message();
      error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      error_code_ = from.error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlaybackControlResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:player_service.PlaybackControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaybackControlResponse::CopyFrom(const PlaybackControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_service.PlaybackControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaybackControlResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PlaybackControlResponse::Swap(PlaybackControlResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaybackControlResponse::InternalSwap(PlaybackControlResponse* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_code_, other->error_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlaybackControlResponse::GetMetadata() const {
  protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PlayerService::~PlayerService() {}

const ::google::protobuf::ServiceDescriptor* PlayerService::descriptor() {
  protobuf_player_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_5fservice_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* PlayerService::GetDescriptor() {
  return descriptor();
}

void PlayerService::PlayerProperties(::google::protobuf::RpcController* controller,
                         const ::player_service::PlayerPropertiesRequest*,
                         ::player_service::PlayerPropertiesResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method PlayerProperties() not implemented.");
  done->Run();
}

void PlayerService::ResetPlaylist(::google::protobuf::RpcController* controller,
                         const ::player_service::ResetRequest*,
                         ::player_service::ResetResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ResetPlaylist() not implemented.");
  done->Run();
}

void PlayerService::PushToPlaylist(::google::protobuf::RpcController* controller,
                         const ::player_service::PushToPlaylistRequest*,
                         ::player_service::PushToPlaylistResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method PushToPlaylist() not implemented.");
  done->Run();
}

void PlayerService::PlaybackControl(::google::protobuf::RpcController* controller,
                         const ::player_service::PlaybackControlRequest*,
                         ::player_service::PlaybackControlResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method PlaybackControl() not implemented.");
  done->Run();
}

void PlayerService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_player_5fservice_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      PlayerProperties(controller,
             ::google::protobuf::down_cast<const ::player_service::PlayerPropertiesRequest*>(request),
             ::google::protobuf::down_cast< ::player_service::PlayerPropertiesResponse*>(response),
             done);
      break;
    case 1:
      ResetPlaylist(controller,
             ::google::protobuf::down_cast<const ::player_service::ResetRequest*>(request),
             ::google::protobuf::down_cast< ::player_service::ResetResponse*>(response),
             done);
      break;
    case 2:
      PushToPlaylist(controller,
             ::google::protobuf::down_cast<const ::player_service::PushToPlaylistRequest*>(request),
             ::google::protobuf::down_cast< ::player_service::PushToPlaylistResponse*>(response),
             done);
      break;
    case 3:
      PlaybackControl(controller,
             ::google::protobuf::down_cast<const ::player_service::PlaybackControlRequest*>(request),
             ::google::protobuf::down_cast< ::player_service::PlaybackControlResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& PlayerService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::player_service::PlayerPropertiesRequest::default_instance();
    case 1:
      return ::player_service::ResetRequest::default_instance();
    case 2:
      return ::player_service::PushToPlaylistRequest::default_instance();
    case 3:
      return ::player_service::PlaybackControlRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& PlayerService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::player_service::PlayerPropertiesResponse::default_instance();
    case 1:
      return ::player_service::ResetResponse::default_instance();
    case 2:
      return ::player_service::PushToPlaylistResponse::default_instance();
    case 3:
      return ::player_service::PlaybackControlResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

PlayerService_Stub::PlayerService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
PlayerService_Stub::PlayerService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
PlayerService_Stub::~PlayerService_Stub() {
  if (owns_channel_) delete channel_;
}

void PlayerService_Stub::PlayerProperties(::google::protobuf::RpcController* controller,
                              const ::player_service::PlayerPropertiesRequest* request,
                              ::player_service::PlayerPropertiesResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void PlayerService_Stub::ResetPlaylist(::google::protobuf::RpcController* controller,
                              const ::player_service::ResetRequest* request,
                              ::player_service::ResetResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void PlayerService_Stub::PushToPlaylist(::google::protobuf::RpcController* controller,
                              const ::player_service::PushToPlaylistRequest* request,
                              ::player_service::PushToPlaylistResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void PlayerService_Stub::PlaybackControl(::google::protobuf::RpcController* controller,
                              const ::player_service::PlaybackControlRequest* request,
                              ::player_service::PlaybackControlResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace player_service
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::player_service::PlayerPropertiesRequest* Arena::CreateMaybeMessage< ::player_service::PlayerPropertiesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::player_service::PlayerPropertiesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::player_service::PlayerPropertiesResponse* Arena::CreateMaybeMessage< ::player_service::PlayerPropertiesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::player_service::PlayerPropertiesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::player_service::ResetRequest* Arena::CreateMaybeMessage< ::player_service::ResetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::player_service::ResetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::player_service::ResetResponse* Arena::CreateMaybeMessage< ::player_service::ResetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::player_service::ResetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::player_service::PushToPlaylistRequest* Arena::CreateMaybeMessage< ::player_service::PushToPlaylistRequest >(Arena* arena) {
  return Arena::CreateInternal< ::player_service::PushToPlaylistRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::player_service::PushToPlaylistResponse* Arena::CreateMaybeMessage< ::player_service::PushToPlaylistResponse >(Arena* arena) {
  return Arena::CreateInternal< ::player_service::PushToPlaylistResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::player_service::PlaybackControlRequest* Arena::CreateMaybeMessage< ::player_service::PlaybackControlRequest >(Arena* arena) {
  return Arena::CreateInternal< ::player_service::PlaybackControlRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::player_service::PlaybackControlResponse* Arena::CreateMaybeMessage< ::player_service::PlaybackControlResponse >(Arena* arena) {
  return Arena::CreateInternal< ::player_service::PlaybackControlResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
